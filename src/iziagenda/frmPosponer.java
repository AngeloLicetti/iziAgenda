/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package iziagenda;

import java.util.Calendar;
import java.util.GregorianCalendar;

/**
 *
 * @author Angelo
 */
public class frmPosponer extends javax.swing.JFrame {

    /**
     * Creates new form frmPosponer
     */
    PendienteClass pendiente;
    
    GregorianCalendar hoy = new GregorianCalendar();
    int añoActual = hoy.get(GregorianCalendar.YEAR);
    int mesActual = hoy.get(GregorianCalendar.MONTH);
    int diaActual = hoy.get(GregorianCalendar.DAY_OF_MONTH);
    int horaActual = hoy.get(GregorianCalendar.HOUR_OF_DAY);
    int minutoActual = hoy.get(GregorianCalendar.MINUTE);
    String [] mesesDelAño = {"Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Setiembre","Octubre","Noviembre","Diciembre"};
    
    /**
     * Creates new form frmPosponerPendiente
     */
    public frmPosponer() {
        initComponents();
    }
    
    public frmPosponer(PendienteClass pendiente)
    {
        initComponents();
        extraClass.centrarFrame(this);
        this.pendiente = pendiente;
        generarAños();
    }
    
    public void volver()
    {
        this.dispose();
        new frmAlarmaPendiente(pendiente).setVisible(true);
    }
    
    public void posponer()
    {
        //aqui va toda la logic:
        //ojo
        //ojito!
        GregorianCalendar fecha;
        
        String dia = String.valueOf(cbDia.getSelectedItem()).substring(0,2);
                int hora = (rbNoHora.isSelected())?0:Integer.parseInt((String)cbHora.getSelectedItem());
                int minuto = (rbNoHora.isSelected())?0:Integer.parseInt((String)cbMinuto.getSelectedItem());
                Boolean incluyeHora = (rbNoHora.isSelected())?false:true;
                fecha = new GregorianCalendar(Integer.parseInt((String)cbAño.getSelectedItem()),
                                                getIndexOfMesDelAño((String)cbMes.getSelectedItem()),
                                                Integer.parseInt(dia),hora,minuto);
        
        pendiente.setParaCuando(fecha);
        
        fabricaClass.serializarDatos();
        
        this.dispose();
        new frmPrincipal().setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgHora = new javax.swing.ButtonGroup();
        pnlLogIn = new javax.swing.JPanel();
        btnPosponer = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        lblPosponer = new javax.swing.JLabel();
        cbAño = new javax.swing.JComboBox<>();
        lblContraseña = new javax.swing.JLabel();
        cbMes = new javax.swing.JComboBox<>();
        cbDia = new javax.swing.JComboBox<>();
        cbHora = new javax.swing.JComboBox<>();
        rbHora = new javax.swing.JRadioButton();
        rbNoHora = new javax.swing.JRadioButton();
        cbMinuto = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(400, 370));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlLogIn.setBackground(new java.awt.Color(0, 153, 204));
        pnlLogIn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        pnlLogIn.setMinimumSize(new java.awt.Dimension(400, 370));
        pnlLogIn.setPreferredSize(new java.awt.Dimension(400, 370));
        pnlLogIn.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnPosponer.setBackground(new java.awt.Color(37, 116, 169));
        btnPosponer.setFont(new java.awt.Font("Century Gothic", 3, 36)); // NOI18N
        btnPosponer.setForeground(new java.awt.Color(255, 255, 255));
        btnPosponer.setText("Posponer");
        btnPosponer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        btnPosponer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPosponer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPosponerActionPerformed(evt);
            }
        });
        pnlLogIn.add(btnPosponer, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 320, 50));

        btnVolver.setBackground(new java.awt.Color(37, 116, 169));
        btnVolver.setFont(new java.awt.Font("Century Gothic", 3, 36)); // NOI18N
        btnVolver.setForeground(new java.awt.Color(255, 255, 255));
        btnVolver.setText("Volver");
        btnVolver.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        btnVolver.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        pnlLogIn.add(btnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 320, 50));

        lblPosponer.setFont(new java.awt.Font("Century Gothic", 3, 24)); // NOI18N
        lblPosponer.setForeground(new java.awt.Color(255, 255, 255));
        lblPosponer.setText("Posponer pendiente");
        pnlLogIn.add(lblPosponer, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, -1, -1));

        cbAño.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cbAño.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbAñoItemStateChanged(evt);
            }
        });
        pnlLogIn.add(cbAño, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 80, 30));

        lblContraseña.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lblContraseña.setForeground(new java.awt.Color(255, 255, 255));
        lblContraseña.setText("Para cuándo es (aaaa/mm/dd):");
        pnlLogIn.add(lblContraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        cbMes.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cbMes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbMesItemStateChanged(evt);
            }
        });
        pnlLogIn.add(cbMes, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 90, 30));

        cbDia.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cbDia.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbDiaItemStateChanged(evt);
            }
        });
        pnlLogIn.add(cbDia, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 90, 130, 30));

        cbHora.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cbHora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "08", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));
        cbHora.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbHoraItemStateChanged(evt);
            }
        });
        pnlLogIn.add(cbHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, 100, 30));

        rbHora.setBackground(new java.awt.Color(0, 153, 204));
        bgHora.add(rbHora);
        rbHora.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        rbHora.setForeground(new java.awt.Color(255, 255, 255));
        rbHora.setSelected(true);
        rbHora.setText("Hora:");
        rbHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbHoraActionPerformed(evt);
            }
        });
        pnlLogIn.add(rbHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, 28));

        rbNoHora.setBackground(new java.awt.Color(0, 153, 204));
        bgHora.add(rbNoHora);
        rbNoHora.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        rbNoHora.setForeground(new java.awt.Color(255, 255, 255));
        rbNoHora.setText("No incluír hora");
        rbNoHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNoHoraActionPerformed(evt);
            }
        });
        pnlLogIn.add(rbNoHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 160, 28));

        cbMinuto.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cbMinuto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        pnlLogIn.add(cbMinuto, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 140, 100, 30));

        getContentPane().add(pnlLogIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 370));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPosponerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPosponerActionPerformed
        // TODO add your handling code here:
        posponer();
    }//GEN-LAST:event_btnPosponerActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // TODO add your handling code here:
        volver();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void cbAñoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbAñoItemStateChanged
        // TODO add your handling code here:
        actualizarTiempo();
        if(evt.getStateChange()==1){generarMeses();}
    }//GEN-LAST:event_cbAñoItemStateChanged

    private void cbMesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbMesItemStateChanged
        // TODO add your handling code here:
        actualizarTiempo();
        if(evt.getStateChange()==1){generarDias();}
    }//GEN-LAST:event_cbMesItemStateChanged

    private void cbDiaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbDiaItemStateChanged
        // TODO add your handling code here:
        actualizarTiempo();
        if(evt.getStateChange()==1){generarHoras();}
    }//GEN-LAST:event_cbDiaItemStateChanged

    private void cbHoraItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbHoraItemStateChanged
        // TODO add your handling code here:
        actualizarTiempo();
        if(evt.getStateChange()==1){generarMinutos();}
    }//GEN-LAST:event_cbHoraItemStateChanged

    private void rbHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbHoraActionPerformed
        // TODO add your handling code here:
        cbHora.setEnabled(true);
        cbMinuto.setEnabled(true);
    }//GEN-LAST:event_rbHoraActionPerformed

    private void rbNoHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNoHoraActionPerformed
        // TODO add your handling code here:
        cbHora.setEnabled(false);
        cbMinuto.setEnabled(false);
    }//GEN-LAST:event_rbNoHoraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPosponer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPosponer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPosponer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPosponer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPosponer().setVisible(true);
            }
        });
    }
public void generarAños()
    {
        int año = añoActual;
        System.out.println(año);
        for(int i = 0; i < 15; i++)
        {
            cbAño.addItem(String.valueOf(año++));
        }
    }
    
    public void generarMeses()
    {
        cbMes.removeAllItems();
        if(Integer.parseInt((String)cbAño.getSelectedItem())==añoActual)
        {
            for(int i = mesActual; i<12; i++)
            {
                cbMes.addItem(mesesDelAño[i]);
            }
        }
        else
        {
            for(String mes : mesesDelAño)
            {
                cbMes.addItem(mes);
            }
        }
    }
    
    public void generarDias()
    {
        cbDia.removeAllItems();
        GregorianCalendar gc = new GregorianCalendar(Integer.parseInt((String)cbAño.getSelectedItem()),getIndexOfMesDelAño((String)cbMes.getSelectedItem()),1,0,0);
        int diaMaximo = gc.getActualMaximum(Calendar.DAY_OF_MONTH);
        
        int diaInicial=1;
        if(Integer.parseInt((String)cbAño.getSelectedItem()) == añoActual && getIndexOfMesDelAño((String)cbMes.getSelectedItem())==mesActual)
        {
            diaInicial = diaActual;
        }
        for(int i = diaInicial; i <= diaMaximo; i++)
        {
            int año = Integer.parseInt((String)cbAño.getSelectedItem());
            int mes = getIndexOfMesDelAño((String)cbMes.getSelectedItem());
            String nombreDelDia = fabricaClass.diaDeLaSemana(new GregorianCalendar(año,mes,i).get(GregorianCalendar.DAY_OF_WEEK));
            String numeroDelDia = (String.valueOf(i).length()==1)?"0"+String.valueOf(i):String.valueOf(i);
            cbDia.addItem(numeroDelDia + "      (" + nombreDelDia + ")");
        }
    }
    
    public void generarHoras()
    {
        cbHora.removeAllItems();
        int horaInicial=0;
        if(Integer.parseInt((String)cbAño.getSelectedItem()) == añoActual && 
                getIndexOfMesDelAño((String)cbMes.getSelectedItem())==mesActual &&
                Integer.parseInt(String.valueOf(cbDia.getSelectedItem()).substring(0,2)) == diaActual)
        {
            horaInicial = horaActual;
        }
        for(int i = horaInicial; i <= 23; i++)
        {
            String hora = (String.valueOf(i).length()==1)?"0"+String.valueOf(i):String.valueOf(i);
            cbHora.addItem(hora);
        }  
    }
    
    public void generarMinutos()
    {
        cbMinuto.removeAllItems();
        int minutoInicial=0;
        if(Integer.parseInt((String)cbAño.getSelectedItem()) == añoActual && 
                getIndexOfMesDelAño((String)cbMes.getSelectedItem())==mesActual &&
                Integer.parseInt(String.valueOf(cbDia.getSelectedItem()).substring(0,2)) == diaActual &&
                Integer.parseInt((String)cbHora.getSelectedItem())== horaActual)
        {
            minutoInicial = minutoActual+1;
        }
        for(int i = minutoInicial; i <= 59; i++)
        {
            String minuto = (String.valueOf(i).length()==1)?"0"+String.valueOf(i):String.valueOf(i);
            cbMinuto.addItem(minuto);
        }  
    }
    
    public int getIndexOfMesDelAño(String mes)
    {
        switch (mes)
        {
            case "Enero": {return 0;}
            case "Febrero": {return 1;}
            case "Marzo": {return 2;}
            case "Abril": {return 3;}
            case "Mayo": {return 4;}
            case "Junio": {return 5;}
            case "Julio": {return 6;}
            case "Agosto": {return 7;}
            case "Setiembre": {return 8;}
            case "Octubre": {return 9;}
            case "Noviembre": {return 10;}
            case "Diciembre": {return 11;}
            
            default : {return 0;}
        }
    }
    public void actualizarTiempo()
    {
        hoy = new GregorianCalendar();
        añoActual = hoy.get(GregorianCalendar.YEAR);
        mesActual = hoy.get(GregorianCalendar.MONTH);
        diaActual = hoy.get(GregorianCalendar.DAY_OF_MONTH);
        horaActual = hoy.get(GregorianCalendar.HOUR_OF_DAY);
        minutoActual = hoy.get(GregorianCalendar.MINUTE);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgHora;
    private javax.swing.JButton btnPosponer;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox<String> cbAño;
    private javax.swing.JComboBox<String> cbDia;
    private javax.swing.JComboBox<String> cbHora;
    private javax.swing.JComboBox<String> cbMes;
    private javax.swing.JComboBox<String> cbMinuto;
    private javax.swing.JLabel lblContraseña;
    private javax.swing.JLabel lblPosponer;
    private javax.swing.JPanel pnlLogIn;
    private javax.swing.JRadioButton rbHora;
    private javax.swing.JRadioButton rbNoHora;
    // End of variables declaration//GEN-END:variables
}
